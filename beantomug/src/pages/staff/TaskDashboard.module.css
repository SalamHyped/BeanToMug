.dashboard {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem;
}

.header {
  text-align: center;
  margin-bottom: 2rem;
  padding-bottom: 1rem;
  border-bottom: 2px solid #e9ecef;
}

.header h1 {
  font-size: 2.5rem;
  font-weight: 700;
  color: #896651;
  margin: 0 0 0.5rem 0;
}

.header p {
  font-size: 1.1rem;
  color: #666;
  margin: 0;
}

/* Tasks Container */
.tasksContainer {
  background: white;
  border-radius: 1rem;
  padding: 2rem;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
}

.tasksGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 1.5rem;
}

.taskCard {
  background: #f8f9fa;
  border: 2px solid #e9ecef;
  border-radius: 0.75rem;
  padding: 1.5rem;
  transition: all 0.3s ease;
}

.taskCard:hover {
  border-color: #896651;
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(137, 102, 81, 0.1);
}

.taskHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 1rem;
}

.taskHeader h3 {
  margin: 0;
  color: #333;
  font-size: 1.25rem;
  font-weight: 600;
  flex: 1;
  margin-right: 1rem;
}

.taskBadges {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.priorityBadge,
.statusBadge {
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-size: 0.75rem;
  font-weight: 600;
  color: white;
  text-transform: uppercase;
}

.taskDescription {
  color: #666;
  margin: 0 0 1rem 0;
  line-height: 1.5;
}

.taskDetails {
  margin-bottom: 1rem;
}

.taskDetails p {
  margin: 0.25rem 0;
  font-size: 0.9rem;
  color: #555;
}

.assignmentsList {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 0.5rem;
}

.assignmentBadge {
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-size: 0.75rem;
  font-weight: 600;
  color: white;
  background-color: #896651;
  text-transform: capitalize;
}

.taskActions {
  display: flex;
  gap: 0.75rem;
  justify-content: space-between;
  align-items: center;
}

.statusSelect {
  padding: 0.5rem;
  border: 2px solid #e9ecef;
  border-radius: 0.5rem;
  font-size: 0.9rem;
  background: white;
  cursor: pointer;
  flex: 1;
}

.statusSelect:focus {
  outline: none;
  border-color: #896651;
}

.viewButton {
  background: #896651;
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  font-size: 0.9rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.viewButton:hover {
  background: #6b4f3f;
  transform: translateY(-1px);
}

.emptyState {
  text-align: center;
  padding: 3rem;
  color: #666;
}

.emptyState h3 {
  font-size: 1.5rem;
  margin-bottom: 0.5rem;
  color: #896651;
}

/* Modal Styles */
.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modalContent {
  background: white;
  padding: 2rem;
  border-radius: 1rem;
  width: 90%;
  max-width: 700px;
  max-height: 90vh;
  overflow-y: auto;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 2px solid #e9ecef;
}

.modalHeader h2 {
  margin: 0;
  color: #896651;
  font-size: 1.75rem;
}

.closeButton {
  background: none;
  border: none;
  font-size: 2rem;
  color: #666;
  cursor: pointer;
  padding: 0;
  width: 2rem;
  height: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: all 0.3s ease;
}

.closeButton:hover {
  background: #f8f9fa;
  color: #333;
}

.taskInfo {
  margin-bottom: 2rem;
}

.taskInfo p {
  margin: 0.5rem 0;
  font-size: 1rem;
  color: #333;
}

.taskInfo .priorityBadge,
.taskInfo .statusBadge {
  margin-left: 0.5rem;
}

/* Comments Section */
.commentsSection {
  border-top: 2px solid #e9ecef;
  padding-top: 1.5rem;
}

.commentsSection h3 {
  margin: 0 0 1rem 0;
  color: #896651;
  font-size: 1.25rem;
}

.commentsList {
  margin-bottom: 1.5rem;
  max-height: 300px;
  overflow-y: auto;
}

.comment {
  background: #f8f9fa;
  border: 1px solid #e9ecef;
  border-radius: 0.5rem;
  padding: 1rem;
  margin-bottom: 1rem;
}

.commentHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
  font-size: 0.9rem;
}

.commentHeader strong {
  color: #896651;
}

.commentHeader span {
  color: #666;
  font-size: 0.8rem;
}

.comment p {
  margin: 0;
  color: #333;
  line-height: 1.5;
}

.addComment {
  display: flex;
  gap: 1rem;
  align-items: flex-start;
}

.commentInput {
  flex: 1;
  padding: 0.75rem;
  border: 2px solid #e9ecef;
  border-radius: 0.5rem;
  font-size: 1rem;
  min-height: 80px;
  resize: vertical;
  font-family: inherit;
}

.commentInput:focus {
  outline: none;
  border-color: #896651;
}

.addCommentButton {
  background: #28a745;
  color: white;
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 0.5rem;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  white-space: nowrap;
}

.addCommentButton:hover:not(:disabled) {
  background: #218838;
  transform: translateY(-1px);
}

.addCommentButton:disabled {
  background: #6c757d;
  cursor: not-allowed;
  opacity: 0.6;
}

.loading {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 50vh;
  font-size: 1.2rem;
  color: #666;
}

/* Responsive Design */
@media (max-width: 768px) {
  .dashboard {
    padding: 1rem;
  }
  
  .header h1 {
    font-size: 2rem;
  }
  
  .tasksGrid {
    grid-template-columns: 1fr;
  }
  
  .modalContent {
    width: 95%;
    padding: 1.5rem;
  }
  
  .taskActions {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .statusSelect {
    width: 100%;
  }
  
  .viewButton {
    width: 100%;
  }
  
  .addComment {
    flex-direction: column;
  }
  
  .addCommentButton {
    width: 100%;
  }
}

@media (max-width: 480px) {
  .dashboard {
    padding: 0.5rem;
  }
  
  .header h1 {
    font-size: 1.75rem;
  }
  
  .modalContent {
    padding: 1rem;
  }
  
  .taskCard {
    padding: 1rem;
  }
  
  .modalHeader {
    flex-direction: column;
    gap: 1rem;
    align-items: stretch;
  }
  
  .closeButton {
    align-self: flex-end;
  }
} 